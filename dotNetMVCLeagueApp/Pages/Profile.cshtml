@page
@model dotNetMVCLeagueApp.Pages.Profile

@{
    Layout = "_Layout";
    ViewData["Title"] = $"Stats - {Model.SummonerData.Summoner.Name}";
}

@if (Model.ErrorMessage is not null) {
    <div class="container-fluid" id="ErrorMessage">
        <div class="row d-flex justify-content-center">
            <div class="alert alert-danger alert-error text-center m-4 w-25" role="alert">
                @Model.ErrorMessage
            </div>
        </div>

    </div>
}

@section Scripts {
    <script src="~/js/autohide.js"></script>
}

<div class="row d-flex justify-content-around">

    <div class="col-lg-3 col-xs-12 order-xs-1 order-lg-0" id="summonerInfoPartial">
        @{ await Html.RenderPartialAsync("Shared/Partial/_SummonerInfoPartial", Model.SummonerData.Summoner); }
    </div>

    <div class="col-lg-auto col-xs-12 order-xs-2 order-lg-1">
        <div id="matchListPartial">

            <div id="matchOverview">
                @{
                    if (Model.SummonerData.MatchListOverview.TotalStats.Wins + Model.SummonerData.MatchListOverview.TotalStats.Losses > 0) {
                        await Html.RenderPartialAsync("Shared/Partial/_MatchListOverviewPartial", Model.SummonerData.MatchListOverview);
                    }
                    else {
                        <div class="row d-flex justify-content-center">
                            <div class="col-md-6">
                                <p class="no-spacing">The account either was not updated or there are no records for the summoner. Try updating the profile</p>
                            </div>
                        </div>
                    }
                }
            </div>

            <div id="pages" class="d-flex row justify-content-end mb-4 pr-4">
                @* @if (Model.SummonerData.MatchHeaders.Count > 0) { *@
                @*      *@
                @*      *@
                @*     @if (Model.QueryParams.PageNumber > 0) { *@
                @*         <a asp-route-Name="@Model.QueryParams.Name" *@
                @*            asp-route-Server="@Model.QueryParams.Server" *@
                @*            asp-route-PageSize="@Model.QueryParams.PageSize" *@
                @*            asp-route-PageNumber="@(Model.QueryParams.Offset - Model.QueryParams.PageSize)" class="btn btn-primary-blue rounded-corners-small"> *@
                @*             <i class="fas fa-angle-left"></i> *@
                @*         </a> *@
                @*     } *@
                @*     <a asp-route-Name="@Model.QueryParams.Name" *@
                @*            asp-route-Server="@Model.QueryParams.Server" *@
                @*            asp-route-PageSize="@Model.QueryParams.PageSize" *@
                @*            asp-route-Offset="@(Model.QueryParams.Offset + Model.QueryParams.PageSize)" class="btn btn-primary-blue rounded-corners-small"> *@
                @*             <i class="fas fa-angle-right"></i> *@
                @*         </a> *@
                @*     } *@
            </div>

            <div id="matches">
                @{
                    var headerRenders = new List<Task>(Model.SummonerData.MatchHeaders.Count);
                    headerRenders.AddRange(Model.SummonerData.MatchHeaders.Select(match => Html.RenderPartialAsync("Shared/Partial/_MatchHeaderPartial", match)));
                    await Task.WhenAll(headerRenders);
                }
            </div>

        </div>
    </div>

    <div class="col-lg-3 col-xs-12 order-xs-0 order-lg-2 card-dark-text">
        <div class="sticky pr-5">
            <div class="row d-flex">
                <button class="btn rounded-corners-small button-dark button-dark-secondary float-right ml-auto" type="button" data-toggle="collapse" data-target="#filter"
                        aria-expanded="false" aria-controls="filter">
                    Filter
                </button>
            </div>
            <div class="collapse" id="filter">
                <form method="post" id="formFilter">
                    <div class="row justify-content-center">
                        <div class="col-auto">
                            <label class="" for="numberOfGames">Number of Games</label>
                            <select class="browser-default custom-select mb-1 select-dark rounded-corners-small"
                                    name="numberOfGames"
                                    id="numberOfGames">
                                @foreach (var numberOfGames in Model.NumberOfGames) {
                                    <option value="@numberOfGames">@numberOfGames</option>
                                }
                            </select>

                            <label class="mt-1" for="queueFilter">Queue Type</label>
                            <select
                                class="browser-default custom-select mb-1 select-dark rounded-corners-small" id="queueFilter">
                                @foreach (var (key, value) in Model.QueueFilters) {
                                    <option value="@key">@value</option>
                                }
                            </select>

                            <button type="submit" class="btn align-self-center float-right rounded-corners-small button-dark button-dark-primary">Show</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>