@using dotNetMVCLeagueApp.Config
@using dotNetMVCLeagueApp.Pages.Data.MatchDetail.Overview
@model dotNetMVCLeagueApp.Pages.Data.MatchDetail.Overview.MatchTeamsDto


@{
    var blueGold = ((double) Model.BlueSide.Gold / (Model.BlueSide.Gold + Model.RedSide.Gold)) * 100;
    var blueWidth = blueGold.ToString("N1") + "%";
    var redWidth = (100 - blueGold).ToString("N1") + "%";

    var redSide = Model.RedSide; // abychom nemuseli neustale referencovat pres Model
    var blueSide = Model.BlueSide; // abychom nemuseli neustale referencovat pres Model
}

@functions {

    void PrintTeamInfo(TeamDto team, string teamClass) {
        <text>
            @if (team.Win) {
                <p class="text-center heading3 no-spacing @teamClass">@team.TeamName (WIN)</p>
            }
            else {
                <p class="text-center heading3 no-spacing @teamClass">@team.TeamName</p>
            }
            <div class="row d-flex justify-content-center align-content-center">
                <div class="col-auto align-self-center">
                    <p class="no-spacing text-center">@team.TotalKills Kills</p>
                    <p class="no-spacing deaths text-center">@team.TotalDeaths Deaths</p>
                    <p class="no-spacing text-center">@team.Barons Barons</p>
                </div>

                <div class="col-auto align-self-center">
                    <p class="no-spacing text-center">@team.Dragons Dragons</p>
                    <p class="no-spacing text-center">@team.TurretKills Turrets</p>
                    <p class="no-spacing text-center">@team.InhibitorKills Inhibitors</p>
                </div>
            </div>
        </text>
    }

}

<div>
    <h2 class="heading2">Game Overview</h2>

    <div class="rounded-corners-small card-body card-default-light">
        <div class="row no-gutters">
                <div class="col-4" id="blueSide">
                    @{ PrintTeamInfo(blueSide, "color-blue-side"); }
                </div>

                <div class="col-4">
                    <p class="text-center heading3 no-spacing">Team Gold</p>
                    <div class="progress team-overview-progress-bar">

                        <div style="width: @blueWidth" class="progress-bar progress-bar-blueside">
                            <span class="no-spacing text-white-color">@Model.BlueSide.Gold.ToString("N0")</span>
                        </div>

                        <div style="width: @redWidth" class="progress-bar progress-bar-redside">
                            <span class="no-spacing text-white-color">@Model.RedSide.Gold.ToString("N0")</span>
                        </div>

                    </div>

                    @if (Model.BlueSide.Gold >= Model.RedSide.Gold) {
                        <p class="font-weight-bold no-spacing text-center">
                            +
                            @((Model.BlueSide.Gold - Model.RedSide.Gold).ToString("N0"))
                            Gold Lead <span class="color-blue-side">(Blue)</span>
                        </p>
                    }
                    else {
                        <p class="font-weight-bold no-spacing text-center">
                            +
                            @((Model.RedSide.Gold - Model.BlueSide.Gold).ToString("N0")) Gold Lead
                            <span class="color-red-side">(Red)</span>
                        </p>
                    }

                </div>

                <div class="col-4">
                    @{ PrintTeamInfo(redSide, "color-red-side"); }
                </div>
            </div>


        </div>
    </div>